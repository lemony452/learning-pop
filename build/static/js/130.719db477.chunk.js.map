{"version":3,"file":"static/js/130.719db477.chunk.js","mappings":"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","sources":["components/Modal.tsx","components/Section.tsx","hooks/useFetch.tsx","components/Practice.tsx","components/Player.jsx","routes/detail.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\ninterface PropsType {\n  children: React.ReactNode;\n  open: boolean;\n}\n\nexport default function Modal({ children, open }: PropsType) {\n  const modalRef = useRef<HTMLDialogElement>(null);\n\n  useEffect(() => {\n    if (open) modalRef.current?.showModal();\n  }, [open]);\n\n  if (!open) return <></>;\n\n  return createPortal(\n    <dialog ref={modalRef} className=\"rounded bg-white bg-opacity-90 p-5\">\n      {children}\n    </dialog>,\n    document.getElementById(\"modal\")!,\n  );\n}\n","import React from \"react\";\n\ninterface WrappperComponentType {\n  children: React.ReactNode;\n}\n\nexport default function Section({ children }: WrappperComponentType) {\n  return (\n    <div className=\"container-fluid vw-100 row\" style={{ marginTop: \"7rem\" }}>\n      <div className=\"col-10 offset-1\">{children}</div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst serverURL = \"http://localhost:8080/api\";\n\nconst callFetch = async (url: string, config: any) => {\n  try {\n    console.log(url, config);\n    const res = await fetch(serverURL + url, config);\n    const json = await res.json();\n    return json;\n  } catch (e) {\n    console.log(e);\n    return e;\n  }\n};\n\ninterface GETConfigType {\n  method: string;\n  headers: Object;\n}\n\ninterface POSTConfigType {\n  method: string;\n  body?: any;\n}\n\nexport const useFetch = (\n  url: string,\n  config: GETConfigType | POSTConfigType,\n) => {\n  console.log(\"============Fetch Render========\");\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [err, setErr] = useState(null);\n\n  const fetchData = useCallback(\n    async (reqData?: any) => {\n      setLoading(true);\n      try {\n        const res = await callFetch(url, { ...config, body: reqData });\n        setData(res);\n      } catch (e: any) {\n        setErr(e);\n      }\n      setLoading(false);\n    },\n    [url, config],\n  );\n\n  useEffect(() => {\n    if (config.method === \"GET\") fetchData();\n  }, [fetchData, config.method]);\n\n  return { data, isLoading, err, fetchData };\n};\n","import React, { useRef } from \"react\";\nimport { PopsongType } from \"../routes/popsongs\";\n\ninterface PropsType {\n  popsong: PopsongType;\n  saveData: ({}) => {};\n}\n\nexport default function Practice({ popsong, saveData }: PropsType) {\n  const practiceRef = useRef<HTMLTextAreaElement>(null);\n\n  function onSave(e: React.FormEvent) {\n    e.preventDefault();\n    const practiceValue = practiceRef.current!.value;\n    if (practiceValue && practiceValue !== popsong.practice) {\n      saveData(JSON.stringify({ practice: practiceValue }));\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex gap-3\">\n        <h4>My Practice</h4>\n        <button\n          type=\"submit\"\n          onClick={onSave}\n          className=\"btn btn-sm px-4 btn-success\"\n        >\n          저장하기\n        </button>\n      </div>\n      <form className=\"d-flex flex-column\">\n        <textarea\n          defaultValue={popsong?.practice}\n          ref={practiceRef}\n          className=\"rounded form-textarea text-center lh-lg fs-5 px-3 py-2\"\n          name=\"practice\"\n          id=\"practice\"\n        ></textarea>\n      </form>\n    </div>\n  );\n}\n","import \"../styles/Common.css\";\n\nexport default function Player({ popsong, children }) {\n  return (\n    <div className=\"player d-flex align-items-center gap-2 rounded border p-4\">\n      <img\n        style={{ maxWidth: \"100px\" }}\n        src={popsong?.image.url}\n        alt=\"popsong album\"\n        className=\"rounded\"\n      />\n      <div className=\"d-flex flex-column align-items-start\">\n        <h4>{popsong?.title}</h4>\n        <span className=\"\">{popsong?.singer}</span>\n      </div>\n      {children}\n    </div>\n  );\n}\n","import { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { useEffect, useState } from \"react\";\nimport { defaultFetchType } from \"./edit\";\nimport \"../styles/Common.css\";\nimport Modal from \"../components/Modal\";\nimport Practice from \"../components/Practice\";\nimport Player from \"../components/Player\";\nimport Section from \"../components/Section\";\n\nconst GET_CONFIG = {\n  method: \"GET\",\n  headers: { \"Content-Type\": \"application/json\" },\n};\n\nconst DELETE_CONFIG = {\n  method: \"DELETE\",\n};\n\nconst POST_CONFIG = {\n  method: \"POST\",\n  headers: { \"Content-Type\": \"application/json\" },\n};\n\nexport default function Detail() {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  // const practiceRef = useRef<HTMLTextAreaElement>(null);\n  const [isHint, setHint] = useState(false);\n  const [isOpenModal, setIsOpenModal] = useState(\"\");\n\n  const {\n    data: popsong,\n    isLoading,\n    err,\n  }: defaultFetchType = useFetch(`/popsongs/${id}`, GET_CONFIG)!;\n\n  const {\n    data: deleteDone,\n    isLoading: isDeleting,\n    err: deleteErr,\n    fetchData: deleteData,\n  } = useFetch(`/popsongs/${id}`, DELETE_CONFIG);\n\n  const {\n    data: saveDone,\n    isLoading: isSaving,\n    err: saveErr,\n    fetchData: saveData,\n  } = useFetch(`/popsongs/${id}/save`, POST_CONFIG);\n\n  function handleDeleteModal() {\n    setIsOpenModal(\"delete\");\n  }\n\n  function onDelete() {\n    setIsOpenModal(\"\");\n    deleteData();\n  }\n\n  function onHint() {\n    setHint(!isHint);\n  }\n\n  function moveEdit() {\n    navigate(`/popsongs/${id}/edit`, { state: popsong });\n  }\n\n  useEffect(() => {\n    if (isSaving) setIsOpenModal(\"save\");\n  }, [isSaving]);\n\n  if (err || deleteErr || saveErr) return <div className=\"my-auto\">{err}</div>;\n\n  if (isLoading && !err)\n    return (\n      <div className=\"my-auto\">\n        플레이리스트에서 요청한 팝송을 가져오는 중이예요\n      </div>\n    );\n\n  if (isDeleting && !deleteErr)\n    return <div className=\"my-auto\">플레이리스트에서 삭제하는 중이예요</div>;\n\n  // if (isSaving && !saveErr) return <div>연습한 내용을 저장중이예요</div>;\n\n  if (deleteDone)\n    return (\n      <Modal open={true}>\n        <div className=\"text-center\">\n          <h5>팝송 삭제를 완료했어요!</h5>\n          <br />\n          <Link className=\"btn btn-primary\" to=\"/popsongs\">\n            플레이리스트로 이동하기\n          </Link>\n        </div>\n      </Modal>\n    );\n\n  return (\n    <>\n      <Modal open={isOpenModal === \"delete\"}>\n        <h5>팝송을 플레이리스트에서 삭제하시겠어요?</h5>\n        <br />\n        <div className=\"text-end\">\n          <button className=\"btn btn-danger me-2\" onClick={() => onDelete()}>\n            삭제\n          </button>\n          <button\n            className=\"btn btn-warning\"\n            onClick={() => setIsOpenModal(\"\")}\n          >\n            취소\n          </button>\n        </div>\n      </Modal>\n      <Modal open={isOpenModal === \"save\"}>\n        {isSaving && <h5 className=\"my-auto\">연습한 내용을 저장중이예요</h5>}\n        {!isSaving && (\n          <div className=\"text-center\">\n            <h5>저장을 완료했어요</h5>\n            <br />\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setIsOpenModal(\"\")}\n            >\n              확인\n            </button>\n          </div>\n        )}\n      </Modal>\n      <Section>\n        <div className=\"row col-lg-10 offset-lg-1 justify-content-center\">\n          <div className=\"col-10 col-md-6\">\n            <div className=\"d-flex gap-3\">\n              <h4>Lyrics</h4>\n              <button onClick={onHint} className=\"btn btn-sm btn-warning px-3\">\n                {isHint ? \"가사 보기\" : \"힌트 보기\"}\n              </button>\n            </div>\n            <div\n              style={{\n                whiteSpace: \"pre\",\n              }}\n              className=\"text-center px-3 py-2 overflow-scroll lh-lg fs-5 rounded form-textarea\"\n            >\n              {isHint ? popsong?.translate : popsong?.lyrics}\n            </div>\n          </div>\n          <div className=\"col-10 col-md-6\">\n            {/* <h4>My Practice</h4>\n          <form onSubmit={onSave}>\n            <textarea\n              defaultValue={popsong?.practice}\n              ref={practiceRef}\n              className=\"rounded form-textarea\"\n              name=\"practice\"\n              id=\"practice\"\n            ></textarea>\n            <button className=\"btn btn-success\">저장하기</button>\n          </form> */}\n            <Practice popsong={popsong} saveData={saveData}></Practice>\n          </div>\n        </div>\n        <div className=\"row col-lg-10 offset-lg-1 justify-content-center mt-5\">\n          <Player popsong={popsong}>\n            <div className=\"d-flex gap-2\">\n              <button onClick={moveEdit} className=\"btn btn-primary\">\n                수정하기\n              </button>\n              <button\n                onClick={() => handleDeleteModal()}\n                className=\"btn btn-danger\"\n              >\n                삭제하기\n              </button>\n            </div>\n          </Player>\n        </div>\n      </Section>\n    </>\n  );\n}\n"],"names":["Modal","_ref","children","open","modalRef","useRef","useEffect","_modalRef$current","current","showModal","createPortal","_jsx","ref","className","document","getElementById","_Fragment","Section","style","marginTop","useFetch","url","config","console","log","data","setData","useState","isLoading","setLoading","err","setErr","fetchData","useCallback","async","res","fetch","json","e","callFetch","body","reqData","method","Practice","popsong","saveData","practiceRef","_jsxs","type","onClick","preventDefault","practiceValue","value","practice","JSON","stringify","defaultValue","name","id","Player","maxWidth","src","image","alt","title","singer","GET_CONFIG","headers","DELETE_CONFIG","POST_CONFIG","Detail","navigate","useNavigate","useParams","isHint","setHint","isOpenModal","setIsOpenModal","concat","deleteDone","isDeleting","deleteErr","deleteData","saveDone","isSaving","saveErr","Link","to","whiteSpace","translate","lyrics","state"],"sourceRoot":""}